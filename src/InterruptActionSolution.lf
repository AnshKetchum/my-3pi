/**
 * Respond to button A presses on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * This program prints the GPIO number and event type upon button presses.
 */
 target C {
    platform: {
        name: "rp2040",
        board: "pololu_3pi_2040_robot"
    },
    threading: false,
    keepalive: true,
}

import Display from "lib/Display.lf"
preamble {=
    #include <hardware/gpio.h>
    #include "platform.h" // Defines lf_sleep() and thread functions.
=}

main reactor {

    preamble {=
        // Schedule an event roughly every 200 msec.
        void gpio_cool_callback(uint gpio, uint32_t events) {
            char buf[64];
            snprintf(buf, 64, "Event %d", events);

            display_fill_rect(0, 0, DISPLAY_WIDTH, 16, 0);
            display_text(buf, 0, 0, COLOR_WHITE);
        }
      =}
        
    display = new Display()
    physical action a(100 msec): int

    reaction(startup) -> a {=
        // Start a thread to schedule physical actions.
        gpio_init(PICO_DEFAULT_LED_PIN); // Initialize the GPIO pin
        gpio_set_dir(PICO_DEFAULT_LED_PIN, GPIO_IN); // Set the GPIO as input

        // lf_thread_create(&self->thread_id, &external, a);
        gpio_set_irq_enabled_with_callback(PICO_DEFAULT_LED_PIN, GPIO_IRQ_EDGE_RISE | GPIO_IRQ_EDGE_FALL, true, &gpio_cool_callback);

    =}

    reaction(a) {=
        interval_t elapsed_time = lf_time_logical_elapsed();
        printf("Action triggered at logical time %lld nsec after start.\n", elapsed_time);
    =}
}
