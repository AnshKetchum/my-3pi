/**
 * Respond to button A presses on the
 * <a href="https://www.pololu.com/docs/0J86">Pololu 3pi+ 2040 robot</a>.
 * This program prints the GPIO number and event type upon button presses.
 */
 target C {
    platform: {
        name: "rp2040",
        board: "pololu_3pi_2040_robot"
    },
    single-threaded: true,
    keepalive: true,
    files: ["../robot-lib/"],  // Needed to find display.h
    cmake-include: ["../robot-lib/robot-lib.txt"]  // Needed to find display.h
  
}

import Display from "lib/Display.lf"
preamble {=
    #include <stdio.h>
    #include <pico/stdlib.h>
    #include <hardware/gpio.h>
    #include <display.h>        // Do not use "display.h". Doesn't work.

    void gpio_cool_callback(uint gpio, uint32_t events);
  =}

main reactor {

    preamble {=
        void gpio_cool_callback(uint gpio, uint32_t events) {
            char buf[64];
            snprintf(buf, 64, "Event %d", events);

            display_fill_rect(0, 0, DISPLAY_WIDTH, 16, 0);
            display_text(buf, 0, 0, COLOR_WHITE);
        }
    =}
    reaction(startup) {=
        stdio_init_all();  // Initialize the standard I/O
        gpio_init(PICO_DEFAULT_LED_PIN); // Initialize the GPIO pin
        gpio_set_dir(PICO_DEFAULT_LED_PIN, GPIO_IN); // Set the GPIO as input
        // gpio_pull_up(PICO_DEFAULT_LED_PIN); // Enable pull-up resistor
        // gpio_pull_up(BUTTON_A_PIN); // Enable pull-up resistor

        // Initialize display
        display_init();
        display_set_font(font_8x16);
        // clear the frame buffer
        display_fill(0);

        // gpio_cool_callback(1, 3);
        // Set up the interrupt with the callback
        gpio_set_irq_enabled_with_callback(PICO_DEFAULT_LED_PIN, GPIO_IRQ_EDGE_RISE | GPIO_IRQ_EDGE_FALL, true, &gpio_cool_callback);
    =}
}
